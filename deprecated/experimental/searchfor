#!/usr/bin/python

import sys
import fnmatch
import os
from astropy.io import fits
from astropy.wcs import WCS
from astropy.wcs.wcs import NoConvergence
from astropy.coordinates import SkyCoord
from astropy.utils.exceptions import AstropyWarning
import warnings
warnings.simplefilter('ignore', category=AstropyWarning)
warnings.simplefilter('ignore', category=RuntimeWarning)



def check_file(root, filename, to_find):
    try:
        hdulist = fits.open(os.path.join(root, filename))
        header = hdulist[0].header
        wcs = WCS(header)

        # Get the image dimensions from the header
        width = header.get('NAXIS1', 0)
        height = header.get('NAXIS2', 0)

        x, y = to_find.to_pixel(wcs)

        # Check if coordinates are within the image dimensions
        if x > 0 and y > 0 and x < width and y < height:
            print('Matched coordinates in file {}'.format(filename))

        hdulist.close()  # Explicitly close the FITS file
    except NoConvergence as e:
        pass
    except Exception as e:
        print('Error processing {}: {}'.format(filename, e))


def find(arg):
    # List of directories to search
    search_directories = [
        '/home/dokeeffe/Pictures/CalibratedLight',
        '/mnt/storage/home/dokeeffe/Pictures/CalibratedLightArchive'
    ]

    to_find = SkyCoord.from_name(arg[0])
    print('Searching for {} {}'.format(arg[0], to_find))

    # Iterate through the list of directories
    for directory in search_directories:
        for root, dirnames, filenames in os.walk(directory):
            for filename in fnmatch.filter(filenames, '*.fits'):
                check_file(root, filename, to_find)


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print('Usage searchfor <object name> \nExample searchfor NGC7318')
        sys.exit(2)
    find(sys.argv[1:])